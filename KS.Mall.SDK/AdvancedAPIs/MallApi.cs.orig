
using KS.Model;
using KS.Model.ApiResultModel;
using KS.Ticket.SDK.AdvancedAPIs;
using Newtonsoft.Json;
using RM.Common.DotNetHttp;
using RM.Common.DotNetJson;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using KS.Common.SDK.AdvancedAPIs;
using KS.Model.Mall.MallRequest;
using KS.Model.Mall.MallResponse;

namespace KS.Mall.SDK.AdvancedAPIs
{
    public class MallApi
    {
        /// <summary>
        /// 商城接口
        /// </summary>
        static net.kuaishun.shopinterface.Service service = new net.kuaishun.shopinterface.Service();
<<<<<<< HEAD
=======
        static net.kuaishun.interfacecrs.Service myservice = new net.kuaishun.interfacecrs.Service();

>>>>>>> 182ea59408af535efacb7dc207116da15f4e5207
        //王师傅的接口外头有两个圆括号
        private static string Replacebracket(string str)
        {
            str = str.Replace("(", "").Replace(")", "");
            return str;
        }
        #region 商城支付成功处理
        /// <summary>
        /// 查询微信订单号
        /// </summary>
        /// <param name="hotelcode"></param>
        /// <param name="trade_no"></param>
        /// <param name="notify"></param>
        /// <param name="url"></param>
        /// <returns></returns>
        private static QueryTradeNoModel QueryTradeNo(string hotelcode, string trade_no, string notify, string url)
        {
            var obj = new QueryTradeNoModel();
            try
            {
                if (trade_no != "")
                {
                    var postData = "hotelcode=" + hotelcode + "&trade_no=" + trade_no + "&Notify=" + notify;
                    var result = HttpHepler.SendPost(url, postData);
                    //var obj = JsonConvert.DeserializeObject<QueryTradeNoModel>(result)
                    var transaction_id = JsonHelper.GetJsonValue(result, "transaction_id");
                    if (transaction_id != "")
                    {
                        obj.transaction_id = transaction_id;
                        obj.code = StatusCode.成功;
                        obj.msg = "成功";
                    }
                    return obj;
                }
                obj.code = StatusCode.参数不全;
                return obj;
            }
            catch (Exception ex)
            {
                obj.msg = ex.ToString();
                obj.code = StatusCode.程序异常;
                return obj;
            }
        }
        /// <summary>
        /// 修改订单状态
        /// </summary>
        /// <param name="ordercode"></param>
        /// <param name="remark"></param>
        /// <param name="state"></param>
        /// <param name="oid"></param>
        /// <param name="paymoney"></param>
        /// <param name="ispay"></param>
        /// <returns></returns>
        private static bool UpdateOrderState(string ordercode,string remark,string state,string oid,string paymoney,string ispay)
        {
            //net.kuaishun.shopinterface.Service service = new net.kuaishun.shopinterface.Service();
            var result = service.Setorder_single_remark_json("", "", ordercode, ispay, state, remark, paymoney, oid);
            var IsTrue = JsonHelper.GetJsonValue(result, "returncode");
            if (IsTrue != "")
            {

                return true;
            }
            return false;
        }

        public static string shopname="";
        /// <summary>
        /// 查询订单
        /// </summary>
        /// <param name="hotelcode"></param>
        /// <param name="ordercode"></param>
        /// <returns></returns>
        public static List<QueryOrderModel> QueryOrder(string hotelcode, string ordercode)
        {
            var result = service.Getorder_single_json("", "", ordercode, hotelcode);
            var obj = JsonConvert.DeserializeObject<List<QueryOrderModel>>(result);
            return obj;
        }

        #region  模板消息发送方法
        /// <summary>
        /// 商城购买成功
        /// </summary>
        /// <param name="shopname"></param>
        /// <param name="total"></param>
        /// <param name="tel"></param>
        /// <param name="payway"></param>
        /// <param name="hotelcode"></param>
        /// <param name="guestname"></param>
        /// <param name="Template"></param>
        /// <param name="first"></param>
        public static void SendTempPaySuccess(string shopname, string total, string tel, string payway, string hotelcode, string guestname,string Template,string first)
        {
            string TemplateData = "";
            var paramData = new
            {
                first = new
                {
                    value = first,
                    color = "#173177",
                },
                keyword1 = new
                {
                    value = shopname,
                    color = "#173177",
                },
                keyword2 = new
                {
                    value = total,
                    color = "#173177",
                },
                keyword3 = new
                {
                    value = DateTime.Now.ToString("yyyy-MM-dd"),
                    color = "#173177",
                },
                reamrk = new
                {
                    value = "如有疑问请及时联系我们:" + tel,
                    color = "#173177",
                },
            };
            var json = JsonConvert.SerializeObject(paramData);
            TemplateData = "hotelcode=" + hotelcode + "&openid=" + guestname + "&param=" + json + "&templateName=PaySuccess";
            if (hotelcode != "YLHCSD" && hotelcode != "JINLANJIA")
            {
                HttpHepler.SendPost(Config.SendTemplateUrl, TemplateData);
            }
            else
            {
                CommonApi.SendMsg("", "GMCG", "", hotelcode);
            }
        }
        #endregion
        /// <summary>
        /// 获取管理员列表
        /// </summary>
        /// <param name="hotelcode"></param>
        /// <param name="type"></param>
        /// <param name="action"></param>
        /// <returns></returns>
        private static GetServiceListModel GetServiceList(string hotelcode, string type, string action)
        {
            var postData = "hotelcode=" + hotelcode + "&type=" + type;
            var result=HttpHepler.SendPost(Config.BookingUrl+"?action="+action, postData);
            var list = JsonConvert.DeserializeObject<GetServiceListModel>(result);
            return list;
        }
        /// <summary>
        /// 商城支付成功处理
        /// /// </summary>
        /// <param name="model"></param>
        public static void PaySuccessService(PaySuccessServiceModel model)
        {
            //查订单
            var tradeno = QueryTradeNo(model.hotelcode, model.trade_no, model.notify, Config.CheckWxPayUrl);
            if(tradeno.code==StatusCode.成功&&tradeno.transaction_id!=null)
            {
                //改状态
                var isChange = UpdateOrderState(model.trade_no, "[已支付]微信支付，微信单号:" + tradeno.transaction_id+","+model.remark, "2", model.bosscard, model.total, "1");
                var orderlist = QueryOrder(model.hotelcode, model.trade_no);
                if (orderlist[0].success.Count > 0)
                {
                    var isSendTicket = TicketApi.SendTicket(orderlist, model.user,ref shopname);
                    if (isSendTicket)
                    {
                        
                        SendTempPaySuccess(shopname, model.total, model.tel, model.payway, model.hotelcode, model.openid, "", "您好，您已成功购买");
                        var list = GetServiceList(model.hotelcode, "3", "GetOpenIdList");
                        if (list.data.Count > 0)
                        {
                            foreach (var item in list.data)
                            {
                                SendTempPaySuccess(shopname, model.total, model.tel, model.payway, model.hotelcode, item.openid1, "", "您好，商城有一笔新订单\n购买人："+model.name+"联系方式："+model.mobile);
                            }
                        }
                    }
                }
            }
        }
        #endregion
        #region 首页接口
        /// <summary>
        /// 获取轮播图
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        public static GetCarouselFigureResult Getlp_img_json(GetCarouselFigureModel data)
        {
            string imgdetails = service.Getlp_img_json(data.user, data.token, data.hotelcode);
            imgdetails = Replacebracket(imgdetails);
            var json = JsonConvert.DeserializeObject<List<GetCarouselFigureResult>>(imgdetails)[0];
            return json;
        }

        /// <summary>
        /// 获取活动
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        public static GetActivityResult Gethd_json(GetActivityModel data)
        {
            string details = service.Gethd_json(data.user, data.token, data.hotelcode, data.flag);
            details = Replacebracket(details);
            var returnStr = JsonConvert.DeserializeObject<List<GetActivityResult>>(details)[0];
            return returnStr;
        }

        /// <summary>
        /// 获取所有商品
        /// </summary>
        /// <param name="data"></param>
        /// <returns></returns>
        public static GetGoodsResult Getproduct_onsale_front_all_json(GetGoodsModel data)
        {
            string details = service.Getproduct_onsale_front_all_json(data.user, data.token, data.hotelcode);
            details = Replacebracket(details);
            var returnStr = JsonConvert.DeserializeObject<List<GetGoodsResult>>(details)[0];
            return returnStr;
        }
        #endregion


    }
}
